{"version":3,"sources":["components/Header.js","components/Popup.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Popup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","password","target","elements","value","login","axios","method","url","data","then","response","status","setState","show","title","message","console","log","Error","error","catch","handleChange","_event$target","name","defineProperty","state","bind","assertThisInitialized","_this2","onClick","props","ourInputFunction","onSubmit","type","placeholder","required","onChange","React","Component","Main","isClicked","handleClick","Fragment","components_Popup","Footer","App","components_Header","components_Main","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b230a10f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <header className=\"container\">\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__container\">\r\n        <li className=\"nav__item\">\r\n          <span className=\"nav__item__link nav__item__link--hover\">About</span>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <span className=\"nav__item__link nav__item__link--hover\">Offer</span>\r\n        </li>\r\n        <li className=\"nav__item nav__item__img\">\r\n          <span className=\"nav__item__link\">\r\n            <img\r\n              src=\"images/logo.png\"\r\n              alt=\"logo\"\r\n              className=\"nav__item__link__logo\"\r\n            />\r\n          </span>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <span className=\"nav__item__link nav__item__link--hover\">\r\n            Gallery\r\n          </span>\r\n        </li>\r\n        <li className=\"nav__item\">\r\n          <span className=\"nav__item__link nav__item__link--hover\">\r\n            Contact\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Popup extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      show: true,\r\n      error: false,\r\n      title: \"Are you a Raspberry Knight?\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let password = event.target.elements[1].value;\r\n    let login = event.target.elements[0].value;\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://recruitment-api.pyt1.stg.jmr.pl/login\",\r\n      data: {\r\n        login,\r\n        password\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200 && response.data.status === \"ok\") {\r\n          this.setState({ show: false, title: response.data.message });\r\n        } else if (\r\n          response.status === 200 &&\r\n          response.data.status === \"error\"\r\n        ) {\r\n          this.setState({ error: true });\r\n        } else {\r\n          console.log(response);\r\n          console.log(response.data.status);\r\n\r\n          throw new Error(\"Whoops! status \" + response.status);\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup__overlay\" onClick={this.props.ourInputFunction} />\r\n        <form className=\"popup__container\" onSubmit={this.handleSubmit}>\r\n          <h2\r\n            className={\r\n              this.state.show\r\n                ? \" popup__headline\"\r\n                : \"popup__headline popup__headline--ok\"\r\n            }\r\n          >\r\n            {this.state.title}\r\n          </h2>\r\n          <input\r\n            type=\"email\"\r\n            name=\"login\"\r\n            placeholder=\"Email\"\r\n            className={(() => {\r\n              if (this.state.show && !this.state.error) {\r\n                return \"popup__input popup__input__text\";\r\n              } else if (this.state.error && this.state.show) {\r\n                return \"popup__input popup__input__text popup__input--error\";\r\n              } else {\r\n                return \"popup__input--hidden\";\r\n              }\r\n            })()}\r\n            required=\"required\"\r\n            value={this.state.login}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            className={(() => {\r\n              if (this.state.show && !this.state.error) {\r\n                return \"popup__input popup__input__text\";\r\n              } else if (this.state.error && this.state.show) {\r\n                return \"popup__input popup__input__text popup__input--error\";\r\n              } else {\r\n                return \"popup__input--hidden\";\r\n              }\r\n            })()}\r\n            required=\"required\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <input\r\n            type=\"submit\"\r\n            className={\r\n              this.state.show ? \" popup__button\" : \"popup__input--hidden\"\r\n            }\r\n            onSubmit={this.handleSubmit}\r\n            value=\"Log in\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport Popup from \"./Popup\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    isClicked: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"container\">\r\n          <div className=\"jumbotron\">\r\n            <img\r\n              src=\"images/name_raspberry.png\"\r\n              alt=\"raspberry kingdom\"\r\n              className=\"jumbotron__images\"\r\n            />\r\n            <div className=\"jumbotron__btn\">\r\n              <span\r\n                onClick={this.handleClick}\r\n                className=\"jumbotron__btn__content jumbotron__btn__content--hover\"\r\n              >\r\n                Enter the gates\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {this.state.isClicked && <Popup ourInputFunction={this.handleClick} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container footer__conteiner\">\r\n      <div className=\"footer__col\">\r\n        <p className=\"footer__p\">&copy; 2014 Raspberry Kingdom</p>\r\n      </div>\r\n      <div className=\"footer__col\">\r\n        <p className=\"footer__p\">\r\n          <span>Cookies</span> | <span>Privacy</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"footer__col\">\r\n        <p className=\"footer__p\">\r\n          Design by\r\n          <span>\r\n            <strong> Wizard of Oz</strong>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => (\n  <div className=\"content\">\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}